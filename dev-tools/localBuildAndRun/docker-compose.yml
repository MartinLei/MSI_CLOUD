version: "3.8"

services:
  animalprotectapp:
    # Note: To build the image you need to run 'sbt ";project animalProtectApp;dist"' once.
    build :
      context: ../../animalProtectApp/
      dockerfile: Dockerfile
    image: animalprotect
    hostname: animalprotectapp
    container_name: local_animalprotectapp
    ports:
      - "9000:8080"
    volumes:
      - "../credentials:/srv/credentials/"
    environment:
      # Note: Run 'sbt project animalProtectApp playGenerateSecret' to change APPLICATION_SECRET
      APPLICATION_SECRET: '49EOB:1M5<DOXLWa?1B>loWYjEb^tbWxVgm3H1[U`lh1=ER6^zt@ZmeD<aXJX7gR'
      GOOGLE_PROJECT_ID: 'spring-monolith-403010'
      GOOGLE_BUCKET_NAME: 'animalprotect-media-bucket'
      KAFKA_SERVER: 'kafka1:19092' # Note: If kafka stack is outside use port 9092
    depends_on:
        - kafka1

  imagerecognitionapp:
    build:
      context: ../../imageRecognitionApp/
      dockerfile: Dockerfile
    image: imagerecognitionapp
    hostname: imagerecognitionapp
    container_name: local_imagerecognitionapp
    environment:
      KAFKA_SERVER: 'kafka1:19092' # Note: If kafka stack is outside use port 9092
    depends_on:
      - animalprotectapp
      - kafka1

  rtmp_server:
    build:
      context: ../rtmp_server/
      dockerfile: Dockerfile
    image: rtmp_server
    hostname: rtmp_server
    container_name: local_rtmp_server
    ports:
      - "1935:1935"
    volumes:
      - "../rtmp_server/files:/srv/files"
## Kafka stack inspired by: zk-single-kafka-single.yml
## https://github.com/conduktor/kafka-stack-docker-compose/tree/master
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: local_zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: local_kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_MESSAGE_MAX_BYTES: 4194304 # Note: added to increase size upt to 4MB
      KAFKA_MAX_REQUEST_SIZE: 4194304 # Note: added to increase size upt to 4MB
      KAFKA_MAX_PARTITION_FETCH_BYTES: 4194304 # Note: added to increase size upt to 4MB
    depends_on:
      - zoo1